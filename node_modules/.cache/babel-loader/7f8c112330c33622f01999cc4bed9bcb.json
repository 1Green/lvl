{"ast":null,"code":"var _jsxFileName = \"/Users/ngr/Desktop/leveling/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useRef } from 'react';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport StepContent from '@mui/material/StepContent';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { a1Data } from './data/a1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dataToSteps = data => {\n  return data.reduce((acc, val, i) => {\n    return [...acc, {\n      label: 'aze',\n      description: val\n    }];\n  }, []);\n};\n\nexport default function App() {\n  _s();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = dataToSteps(a1Data);\n  const ref = useRef();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const handleKeyPress = useCallback(event => {\n    if (event.key === \" \") {\n      event.preventDefault();\n      handleNext();\n    }\n\n    if (event.key === \"Backspace\") {\n      handleBack();\n    }\n\n    if (event.key === \"r\") {\n      handleReset();\n    }\n  }, [handleNext]);\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [handleKeyPress]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      color: 'white',\n      backgroundColor: '#333'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      orientation: \"vertical\",\n      children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n        ref: ref,\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          StepIconProps: {\n            sx: {\n              color: 'darkred'\n            }\n          },\n          children: step.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: step.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleNext,\n                sx: {\n                  mt: 1,\n                  mr: 1\n                },\n                children: index === steps.length - 1 ? 'Finish' : 'Continue'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: index === 0,\n                onClick: handleBack,\n                sx: {\n                  mt: 1,\n                  mr: 1\n                },\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, step.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n      square: true,\n      elevation: 0,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"All steps completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        sx: {\n          mt: 1,\n          mr: 1\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6601wZ2ulDlfNkuFpZUApOOMf3w=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ngr/Desktop/leveling/src/App.tsx"],"names":["useCallback","useEffect","useRef","React","Box","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","a1Data","dataToSteps","data","reduce","acc","val","i","label","description","App","activeStep","setActiveStep","useState","steps","ref","handleNext","prevActiveStep","handleBack","handleReset","handleKeyPress","event","key","preventDefault","window","addEventListener","removeEventListener","maxWidth","color","backgroundColor","map","step","index","sx","mb","mt","mr","length","p"],"mappings":"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","sourcesContent":["import { MutableRefObject, useCallback, useEffect, useRef } from 'react'\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport StepContent from '@mui/material/StepContent';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\n\nimport { a1Data } from './data/a1'\n\ntype Steps = {\n  label: string;\n  description: string;\n}\n\nconst dataToSteps = (data: string[]) => {\n  return data.reduce((acc, val, i) => {\n    return [...acc, { label: 'aze', description: val}]\n  }, [] as Steps[])\n}\n\nexport default function App() {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = dataToSteps(a1Data)\n  const ref = useRef<HTMLDivElement>()\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n\n  const handleKeyPress = useCallback(\n    (event: KeyboardEvent) => {\n        if (event.key === \" \") {\n          event.preventDefault()\n          handleNext();\n        }\n        if (event.key === \"Backspace\") {\n          handleBack();\n        }\n        if (event.key === \"r\") {\n          handleReset();\n        }\n\n    },\n    [handleNext]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [handleKeyPress]);\n\n  return (\n    <Box sx={{ maxWidth: 400, color: 'white', backgroundColor: '#333' }}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((step, index) => (\n          <Step key={step.label} ref={ref}>\n            <StepLabel StepIconProps={{sx: { color: 'darkred'}}}>\n              {step.label}\n            </StepLabel>\n            <StepContent>\n              <Typography>{step.description}</Typography>\n              <Box sx={{ mb: 2 }}>\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleNext}\n                    sx={{ mt: 1, mr: 1 }}\n                  >\n                    {index === steps.length - 1 ? 'Finish' : 'Continue'}\n                  </Button>\n                  <Button\n                    disabled={index === 0}\n                    onClick={handleBack}\n                    sx={{ mt: 1, mr: 1 }}\n                  >\n                    Back\n                  </Button>\n                </div>\n              </Box>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} sx={{ p: 3 }}>\n          <Typography>All steps completed - you&apos;re finished</Typography>\n          <Button onClick={handleReset} sx={{ mt: 1, mr: 1 }}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}